---
- name: "Create directories"
  file:
    path:  "{{ item.path }}"
    state: "directory"
  with_items: "{{ docker.directories[(ansible_os_family | lower) + '_' + (ansible_architecture | lower)] | default([]) }}"
  notify: "docker-restart"
  tags:
    - "docker"

- name: "Update templates"
  template:
    src:  "{{ item.src | default((item.dest | basename ()) + '.j2')}}"
    dest: "{{ item.dest }}"
  with_items: "{{ docker.templates[(ansible_os_family | lower) + '_' + (ansible_architecture | lower)] | default([]) }}"
  notify: "docker-restart"             
  tags:
    - "docker"
    
- name: "Generate Docker CA"
  shell:
    cmd: |
      cfssl gencert -initca /etc/docker/tls/ca-csr.json | cfssljson -bare /etc/docker/tls/ca
    creates: "/etc/docker/tls/ca-key.pem"
  notify: "docker-restart"
  tags:
    - "docker"
    
- name: "Sign certificate"
  shell:
    cmd: |
      cfssl gencert -ca /etc/docker/tls/ca.pem -ca-key /etc/docker/tls/ca-key.pem /etc/docker/tls/server-csr.json | cfssljson -bare /etc/docker/tls/server
    creates: "/etc/docker/tls/server-key.pem"
  notify: "docker-restart"
  tags:
    - "docker"
    
- name: "Start and enable docker"
  systemd:
    name: "docker"
    state: "started"
    enabled: "yes"
    daemon_reload: "yes"
  tags:
    - "docker"
